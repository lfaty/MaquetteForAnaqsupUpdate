// <auto-generated />
using System;
using MaquetteForAnaqsup.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MaquetteForAnaqsup.API.Migrations
{
    [DbContext(typeof(ApplicationsDbContext))]
    partial class ApplicationsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MaquetteForAnaqsup.API.ImportData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Abreviation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CM")
                        .HasColumnType("int");

                    b.Property<string>("CodeDomaine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeEC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeUE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeUniversite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("CoefEC")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CoefUE")
                        .HasColumnType("int");

                    b.Property<int?>("CreditUE")
                        .HasColumnType("int");

                    b.Property<string>("Departement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Faculte")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LibelleDomaine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LibelleFormation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LibelleLongEC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LibelleUE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LibelleUniversite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mention")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatureUE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Niveau")
                        .HasColumnType("int");

                    b.Property<string>("Parcours")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SEM")
                        .HasColumnType("int");

                    b.Property<int?>("Semestre")
                        .HasColumnType("int");

                    b.Property<string>("Specialite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TD")
                        .HasColumnType("int");

                    b.Property<int?>("TP")
                        .HasColumnType("int");

                    b.Property<int?>("TPE")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ImportDatas");
                });

            modelBuilder.Entity("MaquetteForAnaqsup.API.Models.Domain.AtomeElementConstitutif", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AtomePedagogiqueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodeUniv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ElementConstitutifId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VolumeHoraire")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AtomePedagogiqueId");

                    b.HasIndex("ElementConstitutifId");

                    b.ToTable("AtomeElementConstitutifs");
                });

            modelBuilder.Entity("MaquetteForAnaqsup.API.Models.Domain.AtomePedagogique", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodeUniv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LibelleAP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AtomePedagogiques");
                });

            modelBuilder.Entity("MaquetteForAnaqsup.API.Models.Domain.Debouche", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodeUniv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("FormationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LibelleDebouche")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FormationId");

                    b.ToTable("Debouches");
                });

            modelBuilder.Entity("MaquetteForAnaqsup.API.Models.Domain.Departement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodeDepartement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeUniv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FaculteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LibelleDepartement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FaculteId");

                    b.ToTable("Departements");
                });

            modelBuilder.Entity("MaquetteForAnaqsup.API.Models.Domain.Domaine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodeDomaine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeUniv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LibelleDomaine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Domaines");
                });

            modelBuilder.Entity("MaquetteForAnaqsup.API.Models.Domain.ElementConstitutif", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodeEC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeUniv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CoefEC")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LibelleEC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UniteEnseignementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("UniteEnseignementId");

                    b.ToTable("ElementConstitutifs");
                });

            modelBuilder.Entity("MaquetteForAnaqsup.API.Models.Domain.Faculte", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodeFaculte")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeUniv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LibelleFaculte")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Facultes");
                });

            modelBuilder.Entity("MaquetteForAnaqsup.API.Models.Domain.Formation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AnneeDebut")
                        .HasColumnType("int");

                    b.Property<int?>("AnneeFin")
                        .HasColumnType("int");

                    b.Property<string>("CodeFormation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeUniv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DepartementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GradeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LibelleFormation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MentionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SpecialiteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DepartementId");

                    b.HasIndex("GradeId");

                    b.HasIndex("MentionId");

                    b.HasIndex("SpecialiteId");

                    b.ToTable("Formations");
                });

            modelBuilder.Entity("MaquetteForAnaqsup.API.Models.Domain.Grade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodeUniv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LibelleGrade")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("MaquetteForAnaqsup.API.Models.Domain.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodeUniv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileExtension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FileSizeInBytes")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("MaquetteForAnaqsup.API.Models.Domain.Mention", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodeMention")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeUniv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DomaineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LibelleMention")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DomaineId");

                    b.ToTable("Mentions");
                });

            modelBuilder.Entity("MaquetteForAnaqsup.API.Models.Domain.NatureUniteEnseignement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodeUniv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LibelleNature")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NatureUniteEnseignements");
                });

            modelBuilder.Entity("MaquetteForAnaqsup.API.Models.Domain.Niveau", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodeUniv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NumNiveau")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Niveaus");
                });

            modelBuilder.Entity("MaquetteForAnaqsup.API.Models.Domain.Parcour", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodeParcour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeUniv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("FormationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LibelleParcour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("NiveauId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SemestreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FormationId");

                    b.HasIndex("NiveauId");

                    b.HasIndex("SemestreId");

                    b.ToTable("Parcours");
                });

            modelBuilder.Entity("MaquetteForAnaqsup.API.Models.Domain.ParcourUniteEnseignement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodeUniv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ParcourId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UniteEnseignementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ParcourId");

                    b.HasIndex("UniteEnseignementId");

                    b.ToTable("ParcourUniteEnseignements");
                });

            modelBuilder.Entity("MaquetteForAnaqsup.API.Models.Domain.Semestre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodeUniv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NumSemestre")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Semestres");
                });

            modelBuilder.Entity("MaquetteForAnaqsup.API.Models.Domain.Specialite", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodeSpecialite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeUniv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LibelleSpecialite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MentionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MentionId");

                    b.ToTable("Specialites");
                });

            modelBuilder.Entity("MaquetteForAnaqsup.API.Models.Domain.UniteEnseignement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodeUE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeUniv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CoefUE")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreditUE")
                        .HasColumnType("int");

                    b.Property<string>("LibelleUE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("NatureUniteEnseignementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("NatureUniteEnseignementId");

                    b.ToTable("UniteEnseignements");
                });

            modelBuilder.Entity("MaquetteForAnaqsup.API.Models.Domain.Universite", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdresseUniversite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeUniv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomUniversite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SloganUniversite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlLogo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("VilleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VilleId");

                    b.ToTable("Universites");
                });

            modelBuilder.Entity("MaquetteForAnaqsup.API.Models.Domain.Ville", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodeUniv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeVille")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomVille")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Villes");
                });

            modelBuilder.Entity("MaquetteForAnaqsup.API.Models.Domain.AtomeElementConstitutif", b =>
                {
                    b.HasOne("MaquetteForAnaqsup.API.Models.Domain.AtomePedagogique", "AtomePedagogique")
                        .WithMany("AtomeElementConstitutifs")
                        .HasForeignKey("AtomePedagogiqueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_AtomeElementConstitutif_AtomePedagogique");

                    b.HasOne("MaquetteForAnaqsup.API.Models.Domain.ElementConstitutif", "ElementConstitutif")
                        .WithMany("AtomeElementConstitutifs")
                        .HasForeignKey("ElementConstitutifId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_AtomeElementConstitutif_ElementConstitutif");

                    b.Navigation("AtomePedagogique");

                    b.Navigation("ElementConstitutif");
                });

            modelBuilder.Entity("MaquetteForAnaqsup.API.Models.Domain.Debouche", b =>
                {
                    b.HasOne("MaquetteForAnaqsup.API.Models.Domain.Formation", "Formation")
                        .WithMany("Debouches")
                        .HasForeignKey("FormationId")
                        .HasConstraintName("FK_Debouche_Formation");

                    b.Navigation("Formation");
                });

            modelBuilder.Entity("MaquetteForAnaqsup.API.Models.Domain.Departement", b =>
                {
                    b.HasOne("MaquetteForAnaqsup.API.Models.Domain.Faculte", "Faculte")
                        .WithMany("Departements")
                        .HasForeignKey("FaculteId")
                        .HasConstraintName("FK_Departement_Faculte");

                    b.Navigation("Faculte");
                });

            modelBuilder.Entity("MaquetteForAnaqsup.API.Models.Domain.ElementConstitutif", b =>
                {
                    b.HasOne("MaquetteForAnaqsup.API.Models.Domain.UniteEnseignement", "UniteEnseignement")
                        .WithMany("ElementConstitutifs")
                        .HasForeignKey("UniteEnseignementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ElementConstitutif_UniteEnseignement");

                    b.Navigation("UniteEnseignement");
                });

            modelBuilder.Entity("MaquetteForAnaqsup.API.Models.Domain.Formation", b =>
                {
                    b.HasOne("MaquetteForAnaqsup.API.Models.Domain.Departement", "Departement")
                        .WithMany("Formations")
                        .HasForeignKey("DepartementId")
                        .HasConstraintName("FK_Formation_Departement");

                    b.HasOne("MaquetteForAnaqsup.API.Models.Domain.Grade", "Grade")
                        .WithMany("Formations")
                        .HasForeignKey("GradeId")
                        .HasConstraintName("FK_Formation_Grade");

                    b.HasOne("MaquetteForAnaqsup.API.Models.Domain.Mention", "Mention")
                        .WithMany("Formations")
                        .HasForeignKey("MentionId")
                        .HasConstraintName("FK_Formation_Mention");

                    b.HasOne("MaquetteForAnaqsup.API.Models.Domain.Specialite", "Specialite")
                        .WithMany("Formations")
                        .HasForeignKey("SpecialiteId")
                        .HasConstraintName("FK_Formation_Specialite");

                    b.Navigation("Departement");

                    b.Navigation("Grade");

                    b.Navigation("Mention");

                    b.Navigation("Specialite");
                });

            modelBuilder.Entity("MaquetteForAnaqsup.API.Models.Domain.Mention", b =>
                {
                    b.HasOne("MaquetteForAnaqsup.API.Models.Domain.Domaine", "Domaine")
                        .WithMany("Mentions")
                        .HasForeignKey("DomaineId")
                        .HasConstraintName("FK_Mention_Domaine");

                    b.Navigation("Domaine");
                });

            modelBuilder.Entity("MaquetteForAnaqsup.API.Models.Domain.Parcour", b =>
                {
                    b.HasOne("MaquetteForAnaqsup.API.Models.Domain.Formation", "Formation")
                        .WithMany("Parcours")
                        .HasForeignKey("FormationId")
                        .HasConstraintName("FK_Parcour_Formation");

                    b.HasOne("MaquetteForAnaqsup.API.Models.Domain.Niveau", "Niveau")
                        .WithMany("Parcours")
                        .HasForeignKey("NiveauId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Parcour_Niveau");

                    b.HasOne("MaquetteForAnaqsup.API.Models.Domain.Semestre", "Semestre")
                        .WithMany("Parcours")
                        .HasForeignKey("SemestreId")
                        .HasConstraintName("FK_Parcour_Semestre");

                    b.Navigation("Formation");

                    b.Navigation("Niveau");

                    b.Navigation("Semestre");
                });

            modelBuilder.Entity("MaquetteForAnaqsup.API.Models.Domain.ParcourUniteEnseignement", b =>
                {
                    b.HasOne("MaquetteForAnaqsup.API.Models.Domain.Parcour", "Parcour")
                        .WithMany("ParcourUniteEnseignements")
                        .HasForeignKey("ParcourId")
                        .HasConstraintName("FK_ParcourUniteEnseignement_Parcour");

                    b.HasOne("MaquetteForAnaqsup.API.Models.Domain.UniteEnseignement", "UniteEnseignement")
                        .WithMany("ParcourUniteEnseignements")
                        .HasForeignKey("UniteEnseignementId")
                        .HasConstraintName("FK_ParcourUniteEnseignement_UniteEnseignement");

                    b.Navigation("Parcour");

                    b.Navigation("UniteEnseignement");
                });

            modelBuilder.Entity("MaquetteForAnaqsup.API.Models.Domain.Specialite", b =>
                {
                    b.HasOne("MaquetteForAnaqsup.API.Models.Domain.Mention", "Mention")
                        .WithMany("Specialites")
                        .HasForeignKey("MentionId")
                        .HasConstraintName("FK_Specialite_Mention");

                    b.Navigation("Mention");
                });

            modelBuilder.Entity("MaquetteForAnaqsup.API.Models.Domain.UniteEnseignement", b =>
                {
                    b.HasOne("MaquetteForAnaqsup.API.Models.Domain.NatureUniteEnseignement", "NatureUniteEnseignement")
                        .WithMany("UniteEnseignements")
                        .HasForeignKey("NatureUniteEnseignementId")
                        .HasConstraintName("FK_UniteEnseignement_NatureUniteEnseignement");

                    b.Navigation("NatureUniteEnseignement");
                });

            modelBuilder.Entity("MaquetteForAnaqsup.API.Models.Domain.Universite", b =>
                {
                    b.HasOne("MaquetteForAnaqsup.API.Models.Domain.Ville", null)
                        .WithMany("Universites")
                        .HasForeignKey("VilleId");
                });

            modelBuilder.Entity("MaquetteForAnaqsup.API.Models.Domain.AtomePedagogique", b =>
                {
                    b.Navigation("AtomeElementConstitutifs");
                });

            modelBuilder.Entity("MaquetteForAnaqsup.API.Models.Domain.Departement", b =>
                {
                    b.Navigation("Formations");
                });

            modelBuilder.Entity("MaquetteForAnaqsup.API.Models.Domain.Domaine", b =>
                {
                    b.Navigation("Mentions");
                });

            modelBuilder.Entity("MaquetteForAnaqsup.API.Models.Domain.ElementConstitutif", b =>
                {
                    b.Navigation("AtomeElementConstitutifs");
                });

            modelBuilder.Entity("MaquetteForAnaqsup.API.Models.Domain.Faculte", b =>
                {
                    b.Navigation("Departements");
                });

            modelBuilder.Entity("MaquetteForAnaqsup.API.Models.Domain.Formation", b =>
                {
                    b.Navigation("Debouches");

                    b.Navigation("Parcours");
                });

            modelBuilder.Entity("MaquetteForAnaqsup.API.Models.Domain.Grade", b =>
                {
                    b.Navigation("Formations");
                });

            modelBuilder.Entity("MaquetteForAnaqsup.API.Models.Domain.Mention", b =>
                {
                    b.Navigation("Formations");

                    b.Navigation("Specialites");
                });

            modelBuilder.Entity("MaquetteForAnaqsup.API.Models.Domain.NatureUniteEnseignement", b =>
                {
                    b.Navigation("UniteEnseignements");
                });

            modelBuilder.Entity("MaquetteForAnaqsup.API.Models.Domain.Niveau", b =>
                {
                    b.Navigation("Parcours");
                });

            modelBuilder.Entity("MaquetteForAnaqsup.API.Models.Domain.Parcour", b =>
                {
                    b.Navigation("ParcourUniteEnseignements");
                });

            modelBuilder.Entity("MaquetteForAnaqsup.API.Models.Domain.Semestre", b =>
                {
                    b.Navigation("Parcours");
                });

            modelBuilder.Entity("MaquetteForAnaqsup.API.Models.Domain.Specialite", b =>
                {
                    b.Navigation("Formations");
                });

            modelBuilder.Entity("MaquetteForAnaqsup.API.Models.Domain.UniteEnseignement", b =>
                {
                    b.Navigation("ElementConstitutifs");

                    b.Navigation("ParcourUniteEnseignements");
                });

            modelBuilder.Entity("MaquetteForAnaqsup.API.Models.Domain.Ville", b =>
                {
                    b.Navigation("Universites");
                });
#pragma warning restore 612, 618
        }
    }
}
